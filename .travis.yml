language: r
cache: packages
warnings_are_errors: true
use_bioc: true
bioc_required: true
cran: http://cran.rstudio.com
dist: trusty
addons:
  apt:
    packages:
    - libfftw3-dev
    - libgsl0-dev
    - libgsl0ldbl
os:
- linux
- osx
osx_image: xcode9
r:
- 3.3
- 3.4
- 3.5
- release
- devel
matrix:
  allow_failures:
  - r: devel
env:
  global:
  - RGL_USE_NULL=TRUE
  - PROJECT_NAME=neuroconductor
  - DISPLAY=:99.0
  - R_REMOTES_NO_ERRORS_FROM_WARNINGS=true
r_check_args: "--as-cran --install-args=--build"
before_install:
- ulimit -n 2048
- export PROJ_DIR=`basename $PWD`
- fname=travis_helpers.sh
- wget -O ${fname} http://bit.ly/travis_helpers
- cat ${fname}; source ${fname}; rm ${fname}
- cat DESCRIPTION
- start_xvfb ;
- export rver=`r_version`; echo $rver ;
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then no_open_mp ; fi
- jags_install ;
- v8_install ;
- dcmtk_install ;
- remove_neuroc_packages
- cat DESCRIPTION
- install_remotes_no_dep
- cat DESCRIPTION
- export PACKAGE_NAME=`package_name`
- echo "Package Name is $PACKAGE_NAME"
- if [[ "${PACKAGE_NAME}" == "waveslim" ]]; then fftw_install ; fi
- if [[ "${PACKAGE_NAME}" == "dti" ]]; then gsl_install ; fi
- if [[ "${PACKAGE_NAME}" == "ROpenCVLite" || "${PACKAGE_NAME}" == "Rvision" ]]; then
  shopt -s expand_aliases ; x=`Rscript -e "cat(Sys.which('R'))"` ; echo "reset R"
  ; alias R="travis_wait 100 ${x}" ; fi
- install_python_requirements ;
- R CMD javareconf ;
after_success:
- dump_logs
after_failure:
- dump_logs
before_deploy:
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then PKG_TARBALL=$(ls -1t *.tgz | head -n 1);
  PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tgz/_'"R${rver}"'.tgz/'` ; mv ${PKG_TARBALL}
  ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}" ; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then PKG_TARBALL=$(ls -1t *.tar.gz | head -n
  1); PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tar.gz/_'"R${rver}"'.tar.gz/'`
  ; mv ${PKG_TARBALL} ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}"
  ; fi
- if [[ "${TRAVIS_OS_NAME}" = "osx" ]]; then rm -f *.tar.gz; fi
deploy:
  provider: releases
  skip_cleanup: true
  file_glob: true
  overwrite: true
  file: "${PACKAGE_NAME}*.t*gz"
  on:
    tags: true
  api-key:
    secure: fowimHLPaJTA2hKWCKloerMBXbaafpiVa0b3SIJJGiOMhxja1KFPV6YLw4z7AJUP/O19roH/vQgVQhH2esnQEhxmq3ozct4Rohl7qp633/nKIsIYJpvPyOhrlNYXlMPljaoECUgdfBgcSBzgE1dQDWJ4RLH1sXLz912C9kDK+vy37i/0ZZjPLY6a1libUZsyDHjRJC2KPc9CYcxNpMGXkcAPlKuEHN7FGgrGGP1YYrlIAphZb2LnJ2tuZSALqzq+yiIdDnKgBM90/qgvaPgXgC4Qlx25EXHpqU/34pXH1mXdXSnTEkhLWTyXG+Xn2UqKccvlJiNLxuw/ZNCcbPqbCChykOsBWv95WpFcvC03msopF5R4TSRUNQHWtY+0FSLYmOjraWZZAL/v2X8C84PD2+ajVYUhohKQQ7xyL4Z1mfXNKpk1jWkXCdUVedNETxnLAjg/wxNKwt4Po0OnOWINZYoQhQgdvsPMi32P0YhpbmT+Cs7twWrYwJV4ZLLDmKA1KngiccqHuCQfHIvJ59YlVCtI2AKE/rtktrKysyAVLxh6spOPnuij3Vf1r5zGIG0mQLIkT8wnqpT30nu7gilcMZPe3GSC/4yPT5EISAxNw+RyAbbx4krDvRsEIMwoxBY02LWZxQKpDLxszQScZbXmJR5zJX4gS6gAYE76ic8YgZI=
after_deploy:
- if [[ "${TRAVIS_OS_NAME}" == "linux" && ${TRAVIS_R_VERSION_STRING} = "release" ]];
  then echo 'covr::coveralls(type = "all", quiet = FALSE)' > neuroc_covr.R ; travis_wait
  100 Rscript neuroc_covr.R ; rm neuroc_covr.R ; fi
